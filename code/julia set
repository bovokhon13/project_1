import numpy as np
import matplotlib.pyplot as plt

def julia(z, c, max_iter):
    for n in range(max_iter):
        if abs(z) > 2:
            return n
        z = z * z + c
    return max_iter

def julia_set(xmin, xmax, ymin, ymax, width, height, max_iter, c):
    x = np.linspace(xmin, xmax, width)
    y = np.linspace(ymin, ymax, height)
    julia_image = np.empty((height, width))

    for i in range(height):
        for j in range(width):
            julia_image[i, j] = julia(x[j] + 1j * y[i], c, max_iter)

    return julia_image

# Начальные параметры
xmin, xmax, ymin, ymax = -1.5, 1.5, -1.5, 1.5
width, height = 800, 600
max_iter = 256
c = -0.7 + 0.27015j  # Фиксированное значение c для множества Жюлиа

# Функция для обновления изображения
def update_plot(ax, extent):
    xmin, xmax, ymin, ymax = extent
    julia_image = julia_set(xmin, xmax, ymin, ymax, width, height, max_iter, c)
    ax.clear()
    ax.imshow(julia_image, extent=extent, cmap="plasma", origin="lower")
    ax.set_title(f"Множество Жюлиа (c = {c.real} + {c.imag}j)")

# Обработчик событий увеличения
def on_click(event):
    if event.button == 1:  # Левая кнопка мыши для увеличения
        x_center = event.xdata
        y_center = event.ydata

        zoom_factor = 0.5
        x_range = (xmax - xmin) * zoom_factor / 2
        y_range = (ymax - ymin) * zoom_factor / 2

        new_extent = (
            x_center - x_range,
            x_center + x_range,
            y_center - y_range,
            y_center + y_range,
        )

        update_plot(ax, new_extent)
        fig.canvas.draw()

julia_image = julia_set(xmin, xmax, ymin, ymax, width, height, max_iter, c)

fig, ax = plt.subplots()
ax.imshow(julia_image, extent=(xmin, xmax, ymin, ymax), cmap="plasma", origin="lower")
ax.set_title(f"Множество Жюлиа (c = {c.real} + {c.imag}j)")
fig.canvas.mpl_connect("button_press_event", on_click)

plt.show()
